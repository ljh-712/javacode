给定一个非负整数数组 A， A 中一半整数是奇数，一半整数是偶数。

对数组进行排序，以便当 A[i] 为奇数时，i 也是奇数；当 A[i] 为偶数时， i 也是偶数。

你可以返回任何满足上述条件的数组作为答案。

 

示例：

输入：[4,2,5,7]
输出：[4,5,2,7]
解释：[4,7,2,5]，[2,5,4,7]，[2,7,4,5] 也会被接受。

  public int[] sortArrayByParityII(int[] A) {
        int i=0;//偶数下标
        for(int j=1;j<A.length;j+=2) {//j代表奇数下标偶数下标
            if(A[j]%2!=1) {//如果奇数下标的位置是偶数，那么检查偶数下标是不是偶数
            //，如果是，继续找下一个偶数下标，直到下一个偶数下标是奇数，与刚刚是奇数下标的偶数交换
            //排列好偶数，奇数也就排好了
                while(A[i]%2==0) {
                    i=i+2;
                }
                int t=A[i];
                A[i]=A[j];
                A[j]=t;

            }

        }
        return A;
    }