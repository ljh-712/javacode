/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/*
我们可以定义两个指针分别指向奇数节点的链表和偶数节点的链表，最后将奇数节点的尾指针指向偶数节点的头指针
*/
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head==null) {
            return null;
        }  
        
        ListNode odd=head;
        ListNode evenhead=head.next;
        ListNode even=head.next;
        while(even!=null&&even.next!=null) {
           
            odd.next=even.next;
            odd=odd.next;
            even.next=odd.next;
            even=even.next;
            
        }
        odd.next=evenhead;//让奇数链表的尾巴指向偶数链表的头，要注意新定义一个节点保存偶数节点的头evenhead
        return head;
      
        
    } 
}