/**
     * 以")("为例
     *定义两个指针，left,right一个记录左括号的数量，一个记录右括号的数量，
     * 遍历字符串 ，如果第一个字符是(,那么left++,继续遍历，如果是）,right++,
     * 若left==right,取left/right*2的最大值
     * 若第一个字符是右括号，也就是right>left,将left和right重新置为0，继续遍历，直至找到第一个左括号为止
     * 然后还需要从后往前遍历一次字符串,如果"(()"左括号的长度大于右括号，就需反着遍历
     *
     * @param s=")("
     * @return
     */
    public static int longestValidParentheses(String s) {
        int left=0;
        int right=0;
        int max=0;
        for (int i = 0; i <s.length() ; i++) {
            if (s.charAt(i)=='(') {
                left++;
            }else {
                right++;
            }
            if(left<right) {
                left=right=0;
            }else if (left==right) {
                max=Math.max(max,left*2);
            }
        }
        left=right=0;
        for (int i = s.length()-1; i >=0 ; i--) {
            if (s.charAt(i)==')'){
                right++;
            }else {
                left++;
            }
            if(left>right) {
                left=right=0;
            }else if (left==right) {
                max=Math.max(max,right*2);
            }

        }
        return max;
    }