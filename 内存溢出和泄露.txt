何谓内存溢出
内存溢出是指应用程序系统中存在无法回收的内存或使用的内存过多，最终使得程序运行要使用到的最大内存大于虚拟机能提供的最大内存。
看到知乎上的例子：你在画本上画画，本子画完了，画到桌子上，就是内存溢出

一般出现内存泄漏的情况: 长生命周期存活的对象,内部持有不使用对象的引用，导致不使用的垃圾对象无法回收。

一般经常程序经常 出现内存泄漏的例子:在使用长期存活的数据结构、数组时,都要考虑对象引用导致内存泄漏的问题

何谓内存泄露
是指程序中己动态分配的堆内存由于某种原因程序未释放或无法释放，造成系统内存的浪费，导致程序运行速度减慢甚至系统崩溃等严重后果。
也在知乎上看到一个例子：纸是有限的，每个人画完后擦干净放回桌上，别人可以拿来再画。但是有人没擦。。。

内存泄露最终的结果就是可用内存越来越小，如果再下次申请内存的时候，不够了就抛oom


两者的区别和联系
首先要明确内存泄露不一定会导致内存溢出（经常有些公司项目做的很大，项目写的很烂，会有内存泄漏，但是因为公司服务器内存很大，每天重启一下来解决问题，这种情况，虽然有内存泄漏，但是内存还是够用，也不会内存溢出。）
内存溢出代码本身没有原则问题，最多算是代码品质不高，想要消除报错只能增加java分配的内存或者优化代码、而内存泄漏则是由于代码存在缺陷，如果不修改代码问题，即使分配再大的内存也会最终报错
