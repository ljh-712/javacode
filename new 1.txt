一、排序：
1、比较次数和时间复杂度还是有区别的，
堆排序的时间复杂度不会因为待排序序列的有序程度而改变，
但是待排序序列的有序程度会影响比较次数，
选择排序每选一个输出来数出来都要和剩余的所有数比较，这样待排序序列的有序程度不会影响比较次数。
2、元素的移动次数与关键字的初始排列次序无关的是：基数排序
3、元素的比较次数与初始序列无关的是：选择排序
4、元素的时间复杂度与初始序列无关的是：选择排序
重写和重载：
重写（覆盖）只能发生在父类和子类之间，而重载可以发生在相同类中
重写运行期的活动，重载是编译期的活动
但是返回值类型不作为是否重载的标准，可以修改可见性；      
重写是不同的，要求子类重写基类的方法时要与父类方法具有相同的参数类型和返回值，可见性需要大于等于基类的方法
链接：https://www.nowcoder.com/questionTerminal/e4e6e27a880649bdaa57583270b87600
来源：牛客网

二、重写（override）

override是重写（覆盖）一个方法，以实现不同的功能。一般是用于子类在继承父类时，重写（重新实现）父类中的方法。

重写（覆盖）的规则：

1、重写方法的参数列表必须完全与被重写的方法的相同,否则不能称其为重写而是重载.

2、重写方法的访问修饰符一定要大于被重写方法的访问修饰符（public>protected>default>private）。

3、重写的方法的返回值必须和被重写的方法的返回一致；

4、重写的方法所抛出的异常必须和被重写方法的所抛出的异常一致，或者是其子类；

5、被重写的方法不能为private，否则在其子类中只是新定义了一个方法，并没有对其进行重写。

6、静态方法不能被重写为非静态的方法（会编译出错）。
三、重载（overload）
overload是重载，一般是用于在一个类内实现若干重载的方法，这些方法的名称相同而参数形式不同。

重载的规则：

1、在使用重载时只能通过相同的方法名、不同的参数形式实现。不同的参数类型可以是不同的参数类型，不同的参数个数，不同的参数顺序（参数类型必须不一样）；

2、不能通过访问权限、返回类型、抛出的异常进行重载；

3、方法的异常类型和数目不会对重载造成影响；

多态的概念比较复杂，有多种意义的多态，一个有趣但不严谨的说法是：继承是子类使用父类的方法，而多态则是父类使用子类的方法。 
一般，我们使用多态是为了避免在父类里大量重载引起代码臃肿且难于维护。 
四、java后缀的文件是可以有很多类的,但是只是允许其中的一个类使用public修饰,并且使用public修饰的类一定要和文件同名
 在java文件中，public类必须和文件名同名；而内部类和非public类可以是任意名字。
一个.java只能有一个与文件名相同的类，可以包含其他类
比如，如果有一个java文件名叫Sample.java，那么以下内容是可以编译通过的： 
