有12张连在一起的12生肖的邮票。
现在你要从中剪下5张来，要求必须是连着的。
（仅仅连接一个角不算相连）

public class 剪邮票_ {
    private static int[] arr={0,0,0,0,0,0,0,1,1,1,1,1};//它的每个排列代表12选5的一个方案
    private static int ans=0;
    private static boolean[] isvisited=new boolean[12];
    public static void main(String[] args) {
        int[] path=new int[12];
        per(0,path);
        System.out.println(ans);
    }

    private static void per(int i, int[] path) {
        if(i==12) {
            if (check(path))
                ans++;
        }
        for (int j = 0; j < 12; j++) {
            if(j>0&&arr[j]==arr[j-1]&&!isvisited[j-1])
                continue;
            if (!isvisited[j]) {
                isvisited[j]=true;//标记为已访问
                path[i]=arr[j];
                per(i+1,path);
                isvisited[j]=false;
            }
        }
    }
    private static void dfs(int[][]g,int i,int j) {
        g[i][j]=0;
        if(i-1>=0&&g[i-1][j]==1)dfs(g,i-1,j);
        if(i+1<=2&&g[i+1][j]==1)dfs(g,i+1,j);
        if (j-1>=0&&g[i][j-1]==1)dfs(g,i,j-1);
        if (j+1<=3&&g[i][j+1]==1)dfs(g,i,j+1);

    }
    private static boolean check(int[] path) {
        int[][] g=new int[3][4];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 4; j++) {
                if (path[i*4+j]==1)g[i][j]=1;
                else g[i][j]=0;
            }
        }
        int count=0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 4; j++) {
                if (g[i][j]==1) {
                    dfs(g,i,j);
                    count++;
                }
            }
        }
        return count==1;
    }
}
