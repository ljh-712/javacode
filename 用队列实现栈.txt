## 使用队列实现栈的下列操作：


	push(x) -- 元素 x 入栈
	pop() -- 移除栈顶元素
	top() -- 获取栈顶元素
	empty() -- 返回栈是否为空
	注意:
	你只能使用队列的基本操作-- 也就是 push to back, peek/pop from front, size, 和 is empty 这些操作是合法的。
。




```java
class MyStack {
    private Queue<Integer> q1;
    private Queue<Integer> q2;

 
    /** Initialize your data structure here. */
    public MyStack() {
        q1=new LinkedList<>();
        q2=new LinkedList<>();
    }
    
    /** Push element x onto stack. */
    public void push(int x) {
        q1.offer(x);
    }
    
    /** Removes the element on top of the stack and returns that element. */
    public int pop() {
        while(q1.size()-1>0) {
            q2.offer(q1.poll());
         
        }
        int r=q1.poll();
        Queue<Integer> temp=q1;
        q1=q2;
        q2=temp;
        return r;
    }
    
    /** Get the top element. */
    public int top() {
        while(q1.size()-1>0) {
            q2.offer(q1.poll());
        }
        int r=q1.poll();
        q2.offer(r);
        Queue<Integer> temp=q1;
        q1=q2;
        q2=temp;
        return r;
    }
    
    /** Returns whether the stack is empty. */
    public boolean empty() {
        if(q1.isEmpty()) 
             return true; 
        return false;
    }
   
}
```

